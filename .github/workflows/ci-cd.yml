name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'env-direct/package-lock.json'

    - name: Install Frontend Dependencies
      run: |
        cd env-direct
        npm ci

    - name: Run Frontend Tests
      run: |
        cd env-direct
        npm test

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Run Backend Tests
      run: |
        cd backend
        mvn test

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'env-direct/package-lock.json'

    - name: Build Frontend
      run: |
        cd env-direct
        npm ci
        npm run build

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build Backend
      run: |
        cd backend
        mvn -B package -DskipTests

    - name: Upload Frontend Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: env-direct/dist

    - name: Upload Backend Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: backend-build
        path: backend/target/*.jar

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Download Frontend Artifacts
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: frontend-build

    - name: Download Backend Artifacts
      uses: actions/download-artifact@v3
      with:
        name: backend-build
        path: backend-build

    - name: Deploy Frontend to Netlify
      uses: nwtgck/actions-netlify@v2
      with:
        publish-dir: './frontend-build'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

    - name: Deploy Backend to Heroku
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        justlogin: true

    - name: Copy JAR file to Heroku
      run: |
        cd backend-build
        jar_file=$(ls *.jar | head -n 1)
        heroku plugins:install java
        heroku deploy:jar $jar_file --app ${{ secrets.HEROKU_APP_NAME }}